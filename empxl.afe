
COLSUM=LAMBDA(matrix;NACHSPALTE(matrix;SUMME));;
CORR.CRAMER=LAMBDA(x_i;y_i;LET(n_i;STAT.TABLE(x_i);n_j;STAT.TABLE(y_i);div;MIN(ANZAHL(n_i);ANZAHL(n_j));n;SUMME(n_j);x_base;n_i*MTRANS(n_j)/n;n_ij;STAT.TABLE(x_i;y_i);WURZEL((SUMME((n_ij-x_base)^2/x_base))/(n*(div-1)))));;
CORR.KENDAL=LAMBDA(x_i;y_i;LET(s_n;ANZAHL(x_i);s_idx;SEQUENZ(1;s_n);x_j;INDEX(x_i;s_idx);y_j;INDEX(y_i;s_idx);WENN(s_n=ANZAHL(y_i);SUMME(STAT.SIGN(x_i-x_j)*STAT.SIGN(y_i-y_j)*MTRIANGLE(s_n;WAHR;WAHR))/KOMBINATIONEN(s_n;2);#WERT!)));;
CORR.PEARSON=LAMBDA(x_i;y_i;KORREL(x_i;y_i));;
CORR.SPEARMAN=LAMBDA(left;right;KORREL(RANG.MITTELW(left;left);RANG.MITTELW(right;right)));;
CUMSUM=LAMBDA(vector;SCAN(0;vector;LAMBDA(accu;value;accu+value)));;
DUMMY.CODING=LAMBDA(variable;[header];LET(variable;FILTER(variable;NICHT(ISTFEHLER(variable)));k_names;MTRANS(EINDEUTIG(variable));k_ref;SPALTENWAHL(k_names;SEQUENZ(1;ANZAHL2(k_names)-1));codes;1*(variable=k_ref);wenn(ODER(WURDEAUSGELASSEN(header);nicht(header));codes;vstapeln(k_ref;codes))));;
GROUP.COUNT=LAMBDA(groups;SPALTENWAHL(GRUPPIERENNACH(groups;values;ANZAHL2;;0);2));;
GROUP.IQR=LAMBDA(values;groups;SPALTENWAHL(GRUPPIERENNACH(groups;values;STAT.IQR;;0);2));;
GROUP.MAD=LAMBDA(values;groups;SPALTENWAHL(GRUPPIERENNACH(groups;values;STAT.MAD;;0);2));;
GROUP.MAX=LAMBDA(values;groups;SPALTENWAHL(GRUPPIERENNACH(groups;values;MAX;;0);2));;
GROUP.MEAN=LAMBDA(values;groups;SPALTENWAHL(GRUPPIERENNACH(groups;values;MITTELWERT;;0);2));;
GROUP.MEDIAN=LAMBDA(values;groups;SPALTENWAHL(GRUPPIERENNACH(groups;values;MEDIAN;;0);2));;
GROUP.MIN=LAMBDA(values;groups;SPALTENWAHL(GRUPPIERENNACH(groups;values;MIN;;0);2));;
GROUP.SD=LAMBDA(values;groups;SPALTENWAHL(GRUPPIERENNACH(groups;values;STABW.S;;0);2));;
GROUP.SUM=LAMBDA(values;groups;SPALTENWAHL(GRUPPIERENNACH(groups;values;SUMME;;0);2));;
HREPEAT=LAMBDA(value;n_times;WENN(UND(ANZAHL2(value)=1;ANZAHL(n_times)=1;n_times>0);WENN(ISTZAHL(value)+ISTLOG(value);SEQUENZ(1;n_times;value;0);WENN(SEQUENZ(1;n_times);value));#WERT!));;
IS.ALL.EQUAL=LAMBDA(vector;UND(vector=index(vector;1;1)));;
IS.VECTOR=LAMBDA(vector;WENNFEHLER(IS.ALL.EQUAL(MAP(REMOVE.INVALID(vector);TYP));FALSCH));;
MDIM=LAMBDA(matrix;HSTAPELN(ZEILEN(matrix);SPALTEN(matrix)));;
MTRACE=LAMBDA(matrix;WENN(ZEILEN(matrix)=SPALTEN(matrix);LET(index;SEQUENZ(ZEILEN(matrix));SUMME(INDEX(matrix;index;index)));#WERT!));;
MTRIANGLE=LAMBDA(size;[p_lower];[p_strict];LET(b_lower;WENN(WURDEAUSGELASSEN(p_lower);WAHR;p_lower);b_strict;WENN(WURDEAUSGELASSEN(p_strict);FALSCH;p_strict);WENN(UND(ANZAHL(size)=1;ANZAHL2(b_lower)=1;ANZAHL2(b_strict)=1);LET(vector;SEQUENZ(size);tvector;MTRANS(vector);1*WENNS(UND(b_lower;b_strict);vector>tvector;b_lower;vector>=tvector;b_strict;vector<tvector;WAHR;vector<=tvector));#WERT!)));;
PQ.RENAME.HELPER=LAMBDA(names;labels;TEXTVERKETTEN(",";;NACHZEILE(MAP(HSTAPELN(labels;names);LAMBDA(string;""""&string&""""));LAMBDA(row;"{"&TEXTVERKETTEN(",";;row)&"}"))));;
PREP.ALTERNATIVE=LAMBDA(alt;XVERWEIS(LINKS(KLEIN(alt);1);{"t";"g";"l";"r";"k";"u";"b"};{"t";"g";"l";"g";"l";"t";"t"};#WERT!));;
QUICK.CODE=LAMBDA(variable;order;XVERGLEICH(variable;order));;
RANDOM.NORM=LAMBDA(p_n;[mean];[sdev];LET(mean;WENN(WURDEAUSGELASSEN(mean);0;mean);sdev;WENN(WURDEAUSGELASSEN(sdev);1;sdev);WURZEL(-2*LN(ZUFALLSMATRIX(p_n)))+COS(2*PI()*ZUFALLSMATRIX(p_n))*sdev+mean));;
REGRESSION.RESIDUALS=LAMBDA(A_VAR;UA_VAR;KOEF;LET(KOEFMAT;HSTAPELN(SEQUENZ(ZEILEN(A_VAR);1;1;0);UA_VAR);ESTIMATES;MMULT(KOEFMAT;KOEF);ESTIMATES-A_VAR));;
REGRESSION=LAMBDA(A_VAR;UA_VAR;LET(KOEFMAT;HSTAPELN(SEQUENZ(ZEILEN(A_VAR);1;1;0);UA_VAR);REDDIM;MMULT(MTRANS(KOEFMAT);KOEFMAT);MMULT(MMULT(MINV(REDDIM);MTRANS(KOEFMAT));A_VAR)));;
REMOVE.INVALID=LAMBDA(vectors;LET(invalid;WENNFEHLER(NACHZEILE(vectors;LAMBDA(zeile;UND(zeile)));FALSCH);FILTER(vectors;invalid)));;
ROWSUM=LAMBDA(matrix;NACHZEILE(matrix;SUMME));;
SCHEMA.CHOOSE=LAMBDA(data;types;[type];LET(type;WENN(WURDEAUSGELASSEN(type);"m";LINKS(KLEIN(type);1));types;LINKS(KLEIN(types);1);WENN(SPALTEN(data)=1;MTRANS(FILTER(data;type=types));SPALTENWAHL(data;FILTER(SEQUENZ(ANZAHL2(types));type=types)))));;
SEQUENCE.RANGE=LAMBDA(a_v;[b_or_step];[step];LET(a_vs;ZUSPALTE(a_v);n_a;ANZAHL(a_vs);b_v;wenn(UND(n_a=2;WURDEAUSGELASSEN(b_or_step);WURDEAUSGELASSEN(step));INDEX(a_vs;2;1);b_or_step);step;WENNS(UND(WURDEAUSGELASSEN(b_or_step);WURDEAUSGELASSEN(step));1;UND(n_a=2;WURDEAUSGELASSEN(step));b_or_step;WURDEAUSGELASSEN(step);1;WAHR;step);a_v;INDEX(a_vs;1;1);s_delta;GANZZAHL(b_v-a_v)+1;SEQUENZ(s_delta;1;a_v;step)));;
STAT.CORRECT.PVALUE=LAMBDA(p_value;[alternative];LET(alt;WENN(WURDEAUSGELASSEN(alternative);"t";alternative);WENNFEHLER(ERSTERWERT(alt;"l";p_value;"g";1-p_value;"t";2*MIN(p_value;1-p_value););#WERT!)));;
STAT.DESCRIBE.LABELS=LAMBDA([type];LET(type;WENN(WURDEAUSGELASSEN(type);"m";LINKS(KLEIN(type);1));labels_base;mtrans({"id";"n"});labels_m;mtrans({"mean";"stddev";"stderr"});labels_o;mtrans({"min";"median";"max";"IQR";"mad"});WENN(type="o";HSTAPELN(labels_base;labels_o);HSTAPELN(labels_base;labels_m;labels_o))));;
STAT.DESCRIBE=LAMBDA(data;[type];[names];LET(type;WENN(WURDEAUSGELASSEN(type);"m";links(KLEIN(type);1));colids;sequenz(spalten(data));vals;zeilenwahl(REDUCE(sequenz(1;WENN(type="o";5;8));colids;LAMBDA(lines;colid;LET(raw_values;spaltenwahl(data;colid);values;filter(raw_values;istzahl(raw_values));cnt_values;ANZAHL(values);basic_stats;HSTAPELN(MIN(values);MEDIAN(values);MAX(values);STAT.IQR(values);STAT.MAD(values));sdev;STABW.S(values);vstapeln(lines;wenn(type="o";HSTAPELN(cnt_values;basic_stats);HSTAPELN(cnt_values;MITTELWERT(values);sdev;sdev/WURZEL(cnt_values);basic_stats))))));colids+1);WENN(WURDEAUSGELASSEN(names);HSTAPELN(colids;vals);HSTAPELN(mtrans(names);vals))));;
STAT.IQR=LAMBDA(vector_or_matrix;SUMME(QUARTILE.INKL(vector_or_matrix;{3;1})*{1;-1}));;
STAT.MAD=LAMBDA(vector_or_matrix;MEDIAN(ABS(vector_or_matrix-MEDIAN(vector_or_matrix))));;
STAT.POOLED.VARIANCE=LAMBDA(values;groups;LET(n_i;STAT.TABLE(groups)-1;sum_n;SUMME(n_i);s_i;GROUP.SD(values;groups)^2;SUMMENPRODUKT(n_i;s_i)/sum_n));;
P.ADJ.BONFERRONI=LAMBDA(p_v;m_v;p_v*m_v);;P.ADJ.HOLM=LAMBDA(p_v;m_v;LET(p_s;SORTIEREN(p_v);id_v;SEQUENZ(ANZAHL(p_v));id_s;SORTIERENNACH(id_v;p_v);p_star;p_s*(m_v+1-id_v);SORTIERENNACH(p_star;id_s)));;P.ADJ.SIDAK=LAMBDA(p_v;m_v;1-(1-p_v)^m_v);;P.ADJ.HOLM_SIDAK=LAMBDA(p_v;m_v;LET(p_s;SORTIEREN(p_v);id_v;SEQUENZ(ANZAHL(p_v));id_s;SORTIERENNACH(id_v;p_v);p_star;1-(1-p_s)^(m_v+1-id_v);SORTIERENNACH(p_star;id_s)));;P.ADJ.HOCHBERG=LAMBDA(p_v;m_v;LET(p_s;SORTIEREN(p_v);id_v;SEQUENZ(ANZAHL(p_v));id_s;SORTIERENNACH(id_v;p_v);p_star;p_s*m_v/(m_v+1-id_v);SORTIERENNACH(p_star;id_s)));;
STAT.SE=LAMBDA(values;LET(sdev;STABW.S(values);cnt_values;ANZAHL(values);sdev/WURZEL(cnt_values)));;STAT.STD.ERROR=STAT.SE;;
STAT.SIGN=LAMBDA(value;-1*(value<0)+(value>0));;
STAT.DESCRIBE.NOMINAL=LAMBDA(data;[variable];LET(variable;wenn(WURDEAUSGELASSEN(variable);"";variable);VSTAPELN(HSTAPELN(variable;"Absolut";"Relativ");HSTAPELN(STAT.TABLE(data;WAHR);stat.table.relative(data)))));;
STAT.TABLE.RELATIVE=LAMBDA(aval;[bval_or_heading];[heading];LET(b_p1;WENNS(WURDEAUSGELASSEN(bval_or_heading);0;ANZAHL2(bval_or_heading)=1;1;ANZAHL2(bval_or_heading)=Anzahl2(aval);2;WAHR;0);heading;WENNS(b_p1=1;n(bval_or_heading);WURDEAUSGELASSEN(heading);0;WAHR;n(heading))<>0;tab;wenn(b_p1=2;STAT.TABLE(aval;bval_or_heading);STAT.TABLE(aval));totals;summe(tab);results;tab/totals;id_aval;EINDEUTIG(aval);id_bval;WENN(b_p1=2;mtrans(EINDEUTIG(bval_or_heading));#NV);wenn(heading;wenn(b_p1=2;VSTAPELN(HSTAPELN("";id_bval);HSTAPELN(id_aval;results));HSTAPELN(id_aval;results));results)));;
STAT.TABLE=LAMBDA(aval;[bval_or_heading];[heading];LET(mdim_a;Zeilen(aval)-Spalten(aval);aval;wenn(mdim_a>0;zuspalte(aval);zuzeile(aval));n_aval;ANZAHL2(aval);id_aval;EINDEUTIG(aval);b_p1;WENNS(WURDEAUSGELASSEN(bval_or_heading);0;ANZAHL2(bval_or_heading)=1;1;ANZAHL2(bval_or_heading)=n_aval;2;WAHR;0);heading;WENNS(b_p1=1;n(bval_or_heading);WURDEAUSGELASSEN(heading);0;WAHR;n(heading))<>0;bval;wenn(b_p1=2;bval_or_heading;wenn(mdim_a>0;VREPEAT(1;n_aval);HREPEAT(1;n_aval)));id_bval;MTRANS(EINDEUTIG(bval));id_avalT;MTRANS(id_aval);results;MMULT(mtrans((ISTFEHLER(id_avalT)+ISTFEHLER(aval)-ISTFEHLER(aval)*ISTFEHLER(id_avalT))*wennfehler(FEHLER.TYP(id_avalT)=FEHLER.TYP(aval);0)+wennfehler(1*(id_avalT=aval);0));(ISTFEHLER(id_bval)+ISTFEHLER(bval)-ISTFEHLER(bval)*ISTFEHLER(id_bval))*wennfehler(FEHLER.TYP(id_bval)=FEHLER.TYP(bval);0)+wennfehler(1*(id_bval=bval);0));WENN(heading;wenn(b_p1=2;VSTAPELN(HSTAPELN("";id_bval);HSTAPELN(id_aval;results));HSTAPELN(id_aval;results));results)));;
TABLE.SELECT=LAMBDA(tab_name;col_names;[with_headers];let(n_rows;ZEILEN(INDIREKT(tab_name));col_refs;tab_name&"["&col_names&"]";no_rows;sequenz(n_rows);no_cols;sequenz(ANZAHL2(col_names))+1;col_headers;WENN(ZEILEN(col_names)>SPALTEN(col_names);MTRANS(col_names);col_names);result;SPALTENWAHL(REDUCE(no_rows;col_refs;LAMBDA(accu;col_ref;HSTAPELN(accu;LET(values;INDIREKT(col_ref);wenn(ISTLEER(values);#NV;values)))));no_cols);WENN(ODER(WURDEAUSGELASSEN(with_headers);NICHT(with_headers));result;VSTAPELN(col_headers;result))));;
ANOVA.TEST=LAMBDA(values;groups;[headers];LET(n_j;GROUP.COUNT(groups);group_k;ANZAHL(n_j);N_all;ANZAHL(values);df_1;group_k-1;df_2;N_all-group_k;mu_all;MITTELWERT(values);mu_j;GROUP.MEAN(values;groups);m_groups;1*(groups=MTRANS(EINDEUTIG(groups)));t_SSB;SUMME(n_j*(mu_j-mu_all)^2);t_SSE;SUMME((m_groups*values-m_groups*MTRANS(mu_j))^2);F_value;(t_SSB/df_1)/(t_SSE/df_2);p_value;F.VERT.RE(F_value;df_1;df_2);results;HSTAPELN(F_value;df_1;df_2;p_value);wenn(oder(WURDEAUSGELASSEN(headers);nicht(headers));results;VSTAPELN(HSTAPELN("F";"df_1";"df_2";"p");results))));;
CHIQU.TEST.S=LAMBDA(x_i;y_i;[header];LET(n_ij;STAT.TABLE(x_i;y_i);WENN(WURDEAUSGELASSEN(header);CHIQU.TEST.X(n_ij;FALSCH);CHIQU.TEST.X(n_ij;header))));;CHIQU.TEST2=CHIQU.TEST.S;;
CHIQU.TEST2.HEADER=LAMBDA(HSTAPELN("p";"df"));;
CHIQU.TEST.X=LAMBDA(n_ij;[header];LET(n_i;rowsum(n_ij);n_j;colsum(n_ij);n;SUMME(n_j);EW;n_i*n_j/n;v_xi2;SUMME((n_ij-EW)^2/EW);df;MAX(ANZAHL(n_i);ANZAHL(n_j))-1;results;HSTAPELN(CHIQU.VERT.RE(v_xi2;df);df);wenn(ODER(WURDEAUSGELASSEN(header);NICHT(header));results;VSTAPELN(CHIQU.TEST2.HEADER();results))));;
DUNN.TEST=LAMBDA(values;groups;[adjustment];LET(ranks;RANG.MITTELW(values;values);n_all;ANZAHL(values);n_i;GROUP.COUNT(groups);group_i;EINDEUTIG(groups);ranksum_i;COLSUM(ranks*(groups=MTRANS(group_i)))/MTRANS(n_i);sigma_correction;n_all*(n_all+1)/12;bind_count;GROUP.COUNT(ranks);bind_correction;SUMME(bind_count^3-bind_count)/(12*(n_all-1));mat_triang;MTRIANGLE(ANZAHL(n_i);FALSCH;WAHR);mat_W1;mat_triang*mtrans(ranksum_i);mat_W2;mat_triang*ranksum_i;mat_n1;mat_triang*MTRANS(1/n_i);mat_n2;mat_triang*1/n_i;sigma;WURZEL((sigma_correction-bind_correction)*(mat_n1+mat_n2));delta_RS;mat_W1-mat_W2;z_value;delta_RS/sigma;g_nbr;SEQUENZ(ANZAHL(n_i));z_id_raw;zuspalte(g_nbr*mat_triang);s_id_raw;zuspalte(mtrans(g_nbr)*mat_triang);z_id;filter(z_id_raw;z_id_raw);s_id;filter(s_id_raw;s_id_raw);z_final;index(z_value;z_id;s_id);m_pairs;summe(SEQUENZ(ANZAHL(n_i);1;0));p_value_raw;NORM.S.VERT(wenn(z_final>0;-1*z_final;z_final);WAHR);p_value;WENNS(ODER(WURDEAUSGELASSEN(adjustment);KLEIN(adjustment)="holm");P.ADJ.HOLM(p_value_raw;m_pairs);KLEIN(adjustment)="bonferroni";P.ADJ.BONFERRONI(p_value_raw;m_pairs);KLEIN(adjustment)="hochberg";P.ADJ.HOCHBERG(p_value_raw;m_pairs);KLEIN(adjustment)="sidak";P.ADJ.SIDAK(p_value_raw;m_pairs);KLEIN(adjustment)="holmsidak";P.ADJ.HOLM_SIDAK(p_value_raw;m_pairs);KLEIN(adjustment)="holm-sidak";P.ADJ.HOLM_SIDAK(p_value_raw;m_pairs);KLEIN(adjustment)="holm_sidak";P.ADJ.HOLM_SIDAK(p_value_raw;m_pairs);WAHR;p_value_raw);vstapeln(HSTAPELN("A";"B";"Statistik";"p");HSTAPELN(ZEILENWAHL(group_i;z_id);zeilenwahl(group_i;s_id);z_final;wenn(p_value>1;1;p_value)))));;
F.TEST.S=LAMBDA(a_v;u_v;[headers];LET(l_uv;ZUSPALTE(EINDEUTIG(u_v));result;WENN(ANZAHL2(l_uv)=2;F.TEST(FILTER(a_v;u_v=INDEX(u_v;1;1));FILTER(a_v;u_v=INDEX(u_v;2;1)));#WERT!);WENN(ODER(WURDEAUSGELASSEN(headers);NICHT(headers));result;VSTAPELN("p";result))));;
KRUSKAL_WALLIS.TEST=LAMBDA(values;groups;[headers];LET(n_all;ANZAHL(values);n_groups;ANZAHL2(EINDEUTIG(groups));d_f;n_groups-1;n_h;GROUP.COUNT(groups);ranks;RANG.MITTELW(values;values);b_bindings;ANZAHL(EINDEUTIG(ranks))<n_all;h_correction;-3*(n_all+1);h_factor;12/(n_groups*(n_groups+1)-h_correction);m_groups;1*(groups=MTRANS(EINDEUTIG(groups)));H_core;h_factor*SUMME(COLSUM(m_groups*ranks)/MTRANS(n_h));bind_factor;1/(n_all^3-n_all);bind_count;GROUP.COUNT(ranks);bind_correction;1-SUMME(bind_count^3-bind_count)*bind_factor;H_value;wenn(b_bindings;H_core/bind_correction;H_core);p_value;CHIQU.VERT.RE(H_value;d_f);results;HSTAPELN(H_value;d_f;p_value);wenn(oder(WURDEAUSGELASSEN(headers);nicht(headers));results;VSTAPELN(HSTAPELN("H";"df";"p");results))));;
PAIRWISE.F.TEST=LAMBDA(values;groups;[adjustment];LET(n_all;ANZAHL(values);group_names;EINDEUTIG(groups);k_all;ANZAHL2(group_names);m_triang;MTRIANGLE(k_all;;1);group_id;SEQUENZ(k_all);grp_1;ZUSPALTE(m_triang*group_id);grp_2;ZUSPALTE(m_triang*MTRANS(group_id));g1_id;filter(grp_1;grp_1);g2_id;filter(grp_2;grp_2);g1_names;INDEX(group_names;g1_id);g2_names;INDEX(group_names;g2_id);p_values;map(g1_names;g2_names;LAMBDA(a_v;b_v;F.TEST(filter(values;groups=a_v);filter(values;groups=b_v))));p_value_raw;wenn(p_values>0.5;1-p_values;p_values);p_star;2*WENNS(WURDEAUSGELASSEN(adjustment);P.ADJ.BONFERRONI(p_value_raw;k_all);KLEIN(adjustment)="holm";P.ADJ.HOLM(p_value_raw;k_all);KLEIN(adjustment)="bonferroni";P.ADJ.BONFERRONI(p_value_raw;k_all);KLEIN(adjustment)="hochberg";P.ADJ.HOCHBERG(p_value_raw;k_all);KLEIN(adjustment)="sidak";P.ADJ.SIDAK(p_value_raw;k_all);KLEIN(adjustment)="holmsidak";P.ADJ.HOLM_SIDAK(p_value_raw;k_all);KLEIN(adjustment)="holm-sidak";P.ADJ.HOLM_SIDAK(p_value_raw;k_all);KLEIN(adjustment)="holm_sidak";P.ADJ.HOLM_SIDAK(p_value_raw;k_all);WAHR;p_value_raw);hstapeln(g1_names;g2_names;wenn(p_star>1;1;p_star))));;
PAIRWISE.T.TEST=LAMBDA(values;groups;[adjustment];LET(n_all;ANZAHL(values);group_names;EINDEUTIG(groups);k_all;ANZAHL2(group_names);m_triang;MTRIANGLE(k_all;;1);group_id;SEQUENZ(k_all);grp_1;ZUSPALTE(m_triang*group_id);grp_2;ZUSPALTE(m_triang*MTRANS(group_id));g1_id;filter(grp_1;grp_1);g2_id;filter(grp_2;grp_2);g1_names;INDEX(group_names;g1_id);g2_names;INDEX(group_names;g2_id);p_values;map(g1_names;g2_names;LAMBDA(a_v;b_v;T.TEST(filter(values;groups=a_v);filter(values;groups=b_v);2;3)));p_value_raw;wenn(p_values>0.5;1-p_values;p_values);p_star;2*WENNS(WURDEAUSGELASSEN(adjustment);P.ADJ.BONFERRONI(p_value_raw;k_all);KLEIN(adjustment)="holm";P.ADJ.HOLM(p_value_raw;k_all);KLEIN(adjustment)="bonferroni";P.ADJ.BONFERRONI(p_value_raw;k_all);KLEIN(adjustment)="hochberg";P.ADJ.HOCHBERG(p_value_raw;k_all);KLEIN(adjustment)="sidak";P.ADJ.SIDAK(p_value_raw;k_all);KLEIN(adjustment)="holmsidak";P.ADJ.HOLM_SIDAK(p_value_raw;k_all);KLEIN(adjustment)="holm-sidak";P.ADJ.HOLM_SIDAK(p_value_raw;k_all);KLEIN(adjustment)="holm_sidak";P.ADJ.HOLM_SIDAK(p_value_raw;k_all);WAHR;p_value_raw);hstapeln(g1_names;g2_names;wenn(p_star>1;1;p_star))));;
T.TEST.S=LAMBDA(p_values;p_groups;[alternative];[paired];LET(ab_names;EINDEUTIG(p_groups);paired;WENN(WURDEAUSGELASSEN(paired);3;wenn(paired;1;3));alternative;WENN(WURDEAUSGELASSEN(alternative);"t";PREP.ALTERNATIVE(alternative));altV;1+(alternative="t");altO;alternative="g";g_1;ZEILENWAHL(ab_names;1);g_2;ZEILENWAHL(ab_names;2);p_v;WENN(ANZAHL2(ab_names)=2;T.TEST(FILTER(p_values;p_groups=g_1);FILTER(p_values;p_groups=g_2);altV;paired);#WERT!);mw_1;MITTELWERT(FILTER(p_values;p_groups=g_1));mw_2;MITTELWERT(FILTER(p_values;p_groups=g_2));WENN(ODER(UND(altO;mw_1>mw_2);UND(alternative="l";mw_1<mw_2));1-p_v;p_v)));;
WILCOXON.TEST=LAMBDA(p_values;p_groups;[alternative];[paired];[correct];LET(alternative;wenn(WURDEAUSGELASSEN(alternative);"t";PREP.ALTERNATIVE(alternative));correct;wenn(WURDEAUSGELASSEN(correct);WAHR;correct);paired;WENN(WURDEAUSGELASSEN(paired);FALSCH;paired);ab_names;EINDEUTIG(p_groups);ab_n;ANZAHL2(ab_names);n_ab;GROUP.COUNT(p_groups);wenn(UND(ab_n=2;n_ab>1;ODER(NICHT(paired);IS.ALL.EQUAL(n_ab)));LET(rank;RANG.MITTELW(p_values;p_values);STATISTIC;MIN(GROUP.SUM(rank;p_groups)-n_ab*(n_ab+1)/2);prod_ab;PRODUKT(n_ab);sum_ab;SUMME(n_ab);z_value;STATISTIC-prod_ab/2;correctTies;(ANZAHL(EINDEUTIG(rank))<ANZAHL(rank))*LET(NTIES;STAT.TABLE(rank);SUMME(NTIES^3-NTIES)/(sum_ab*(sum_ab-1)));SIGMA;WURZEL((prod_ab*((sum_ab+1)-correctTies))/12);correction_value;correct*ERSTERWERT(alternative;"t";STAT.SIGN(z_value)*0.5;"l";-0.5;"g";0.5;);ZVAL;(z_value-correction_value)/SIGMA;PVAL;STAT.CORRECT.PVALUE(NORM.VERT(ZVAL;0;1;WAHR));VSTAPELN(HSTAPELN("Statistik";"Z-Wert";"p-Wert";"Alternative");HSTAPELN(STATISTIC;ZVAL;PVAL;TEXTVERKETTEN(ersterwert(alternative;"t";"<>";"l";"<";"g";">");;ab_names))));#WERT!)));;
VLENGTH=LAMBDA(vector;LET(cols;SPALTEN(vector);length;IS.VECTOR(vector)*(cols*(cols<>1)+ZEILEN(vector)*(cols=1));wenn(length;length;#WERT!)));;
VREPEAT=LAMBDA(value;n_times;WENN(UND(ANZAHL2(value)=1;ANZAHL(n_times)=1;n_times>0);WENN(ISTZAHL(value)+ISTLOG(value);SEQUENZ(n_times;1;value;0);WENN(SEQUENZ(n_times);value));#WERT!));;
STAT.DESKRIPTIV=STAT.DESCRIBE;;STAT.DESKRIPTIV.MERKMALE=STAT.DESCRIBE.NOMINAL;;STAT.DESKRIPTIV.FAKTORSTUFEN=STAT.DESCRIBE.NOMINAL;;STAT.DESKRIPTIV.NOMINAL=STAT.DESCRIBE.NOMINAL;;STAT.DESKRIPTIV.BESCHRIFTUNG=STAT.DESCRIBE.LABELS;;STAT.TABELLE=STAT.TABLE;;STAT.TABELLE.RELATIV=STAT.TABLE.RELATIVE;;STAT.IQA=STAT.IQR;;STAT.MAD=STAT.MAD;;STAT.GEBUNDENE.VARIANZ=STAT.POOLED.VARIANCE;;STAT.GEPOOLTE.VARIANZ=STAT.POOLED.VARIANCE;;STAT.STANDARDFEHLER=STAT.SE;;STAT.STDFEHLER=STAT.SE;;STAT.VORZEICHEN=STAT.SIGN;;KORREL.CRAMER=CORR.CRAMER;;KORREL.KENDAL=CORR.KENDAL;;KORREL.SPEARMAN=CORR.SPEARMAN;;KORREL.PEARSON=CORR.PEARSON;;REGRESSION.RESIDUEN=REGRESSION.RESIDUALS;;PAARWEISER.T.TEST=PAIRWISE.T.TEST;;PAARWEISER.AB.TEST=PAIRWISE.T.TEST;;AB.TEST=T.TEST.S;;SPALTENSUMME=COLSUM;;ZEILENSUMME=ROWSUM;;KUMULATIVESUMME=CUMSUM;;GRUPPEN.SUMME=GROUP.SUM;;GRUPPEN.ANZAHL=GROUP.COUNT;;GRUPPEN.N=GROUP.COUNT;;GRUPPEN.MITTELWERT=GROUP.MEAN;;GRUPPEN.MEDIAN=GROUP.MEDIAN;;GRUPPEN.MIN=GROUP.MIN;;GRUPPEN.MAX=GROUP.MAX;;GRUPPEN.STDABW=GROUP.SD;;GRUPPEN.SD=GROUP.SD;;GRUPPEN.SE=GROUP.SE;;GRUPPEN.STANDARDFEHLER=GROUP.SE;;GRUPPEN.STDFEHLER=GROUP.SE;;GRUPPEN.MAD=GROUP.MAD;;GRUPPEN.IQA=GROUP.IQR;;IST.VEKTOR=IS.VECTOR;;SIND.ALLE.GLEICH=IS.ALL.EQUAL;;IST.ALLE.GLEICH=IS.ALL.EQUAL;;VEKTOR.LÄNGE=VLENGTH;;MDIMENSION=MDIM;;MSPUR=MTRACE;;HWIEDERHOLEN=HREPEAT;;VWIEDERHOLEN=VREPEAT;;MDREIECK=MTRIANGLE;;ZUFALLSMATRIX.NORMAL=RANDOM.NORM;;SEQUENZ.INTERVALL=SEQUENCE.RANGE;;TABELLEN.AUSWAHL=TABLE.SELECT;;UNGÜLTIGE.LÖSCHEN=REMOVE.INVALID;;ENTFERNE.FEHLER=REMOVE.INVALID;;SCHNELL.KODIEREN=QUICK.CODE;;ONE.HOT=DUMMY.CODING;;ONE.HOT.CODING=DUMMY.CODING;;

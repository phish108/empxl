STAT.TABLE = LAMBDA(
    aval; [bval_or_heading]; [heading];
    LET(
        mdim_a; Zeilen(aval) - Spalten(aval);
        aval; wenn(mdim_a > 0; zuspalte(aval); zuzeile(aval));

        n_aval; ANZAHL2(aval);
        id_aval; EINDEUTIG(aval);

        b_p1; WENNS(
            WURDEAUSGELASSEN(bval_or_heading); 0; 
            ANZAHL2(bval_or_heading) = 1; 1;
            ANZAHL2(bval_or_heading) = n_aval; 2;
            WAHR; 0
        );
        heading; WENNS(
            b_p1 = 1; n(bval_or_heading);
            WURDEAUSGELASSEN(heading); 0;
            WAHR; n(heading)
        ) <> 0;

        bval; wenn(
            b_p1 = 2; 
            bval_or_heading; 
            wenn(
                mdim_a > 0; 
                VREPEAT(1; n_aval); 
                HREPEAT(1;n_aval)
            )
        );
        id_bval; MTRANS(EINDEUTIG(bval));
        id_avalT; MTRANS(id_aval); 

        results; MMULT(
            mtrans((ISTFEHLER(id_avalT) + ISTFEHLER(aval) - ISTFEHLER(aval)*ISTFEHLER(id_avalT)) * wennfehler(FEHLER.TYP(id_avalT) = FEHLER.TYP(aval);0) + wennfehler(1*(id_avalT = aval); 0));
            (ISTFEHLER(id_bval) + ISTFEHLER(bval) - ISTFEHLER(bval)*ISTFEHLER(id_bval)) * wennfehler(FEHLER.TYP(id_bval) = FEHLER.TYP(bval);0) + wennfehler(1*(id_bval = bval); 0)
        );
        WENN(
            heading; 
            wenn(b_p1 = 2;
                VSTAPELN(
                    HSTAPELN(""; id_bval); 
                    HSTAPELN(id_aval; results)
                );
                HSTAPELN(id_aval; results)
            );
            results
        )
    )
);;

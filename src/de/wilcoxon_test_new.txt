= LAMBDA( 
    p_values; p_groups; [alternative]; [paired]; [correct]; 
    LET( 
        alternative; wenn(WURDEAUSGELASSEN(alternative); "t"; PREP.ALTERNATIVE(alternative));
        correct; wenn(WURDEAUSGELASSEN(correct); WAHR; correct);
        paired; WENN(WURDEAUSGELASSEN(paired); FALSCH; paired);

        ab_names; EINDEUTIG(p_groups);
        ab_n; ANZAHL2(ab_names);
        n_ab; GROUP.COUNT(p_groups);

        wenn(
            UND(ab_n = 2; n_ab > 1; ODER(NICHT(paired); IS.EQUAL.VALUES(n_ab))); 
            LET(
                rank; RANG.MITTELW(p_values; p_values);
                
                STATISTIC; MIN(GROUP.SUM(rank; p_groups) - n_ab * (n_ab + 1)/2);
                
                prod_ab; PRODUKT(n_ab);
                sum_ab; SUMME(n_ab);
                z_value; STATISTIC - prod_ab/2;

                correctTies; WENN(
                    ANZAHL(EINDEUTIG(rank)) < ANZAHL(rank);
                    LET( 
                        NTIES; STAT.TABLE(rank);
                        SUMME(NTIES^3 - NTIES)/(sum_ab *(sum_ab - 1))
                    );
                    0
                );

                SIGMA; WURZEL((prod_ab * ((sum_ab + 1) - correctTies))/12);

                correction_value; correct * ERSTERWERT(
                        alternative; 
                        "t"; STAT.SIGN(z_value) * 0.5;
                        "l"; -0.5; 
                        "g"; 0.5;
                    );
                ZVAL; (z_value - correction_value)/SIGMA;
                PVAL; STAT.CORRECT.PVALUE.NORM(NORM.VERT(ZVAL; 0; 1; WAHR));
                HSTAPELN(
                    STATISTIC; 
                    ZVAL; 
                    PVAL; 
                    SIGMA; 
                    TEXTVERKETTEN(
                        ersterwert(
                            t_alt; 
                            "t"; "<>"; 
                            "l"; "<"; 
                            "g"; ">"
                        );;
                        ab_names
                    )
                )
            ); 
            #WERT!
        )
    )
)
MATRIX_TO_LONG=LAMBDA(
    matrix;[p_headers]; [p_withnames];
    LET(
        p_headers; WENN(
            WURDEAUSGELASSEN(p_headers); WAHR; p_headers
        );
        p_withnames; WENN(WURDEAUSGELASSEN(p_withnames); {"name"; "value"}; p_withnames);
        b_headers; UND(SPALTEN(p_headers) = 1; ZEILEN(p_headers) = 1; p_headers);
        n_cols; SPALTEN(matrix);
        n_rows; ZEILEN(matrix) - b_headers;
        sel_header; WENNS(
            UND(ANZAHL2(p_headers) = n_cols; SPALTEN(p_headers) = n_cols); p_headers;
            ANZAHL2(p_headers) = n_cols; MTRANS(p_headers);
            b_headers; ZEILENWAHL(matrix; 1); 
            WAHR; SEQUENZ(1; n_cols)
        );
        sel_heading; WENNS(
            UND(ANZAHL2(p_withnames) = 2; ZEILEN(p_withnames) = 1); p_withnames;
            ANZAHL2(p_withnames) = 2; MTRANS(p_withnames);
            WAHR; FALSCH
        );
        values; ZUSPALTE(
            WENN(b_headers; ZEILENWAHL(matrix; SEQUENZ(n_rows;1;2)); matrix)
        );
        idx_n; REST(SEQUENZ(n_rows * n_cols; 1; 0); n_cols) + 1;
        names; INDEX(sel_header; 1; idx_n);
        result; HSTAPELN(names; values);
        WENN(SPALTEN(sel_heading) = 1; result; VSTAPELN(sel_heading; result))
    )
);;

// This stupid hack is needed to avoid Field errors. 
MATRIX.TO.LONG=MATRIX_TO_LONG;;

MATRIX.ZU.LANGFORM=LAMBDA(
    matrix; [p_namen]; [p_ttl];
    LET(
        p_ttl; wenn(WURDEAUSGELASSEN(p_ttl); {"Name"; "Wert"}; p_ttl);
        MATRIX_TO_LONG(matrix; p_namen; p_ttl)
    )
);;

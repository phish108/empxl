CORR.KENDAL = LAMBDA(
    x_i; y_i;
    LET(
        s_n; ANZAHL(x_i);
        x_j; MTRANS(x_i);
        y_j; MTRANS(y_i);
        triangle; MTRIANGLE(s_n; WAHR; WAHR);
        tr_sign; STAT.SIGN(x_i - x_j) * STAT.SIGN(y_i - y_j) * triangle;
        n_c; SUMME(1 * (tr_sign > 0));
        n_d; SUMME(1 * (tr_sign < 0));
        m_k; MIN(ANZAHL(EINDEUTIG(x_i)); ANZAHL(EINDEUTIG(y_i)));
        WENN(
            s_n = ANZAHL(y_i); 
            (n_c - n_d) * 2 / (s_n ^ 2 * ((m_k - 1)/m_k)); 
            #WERT!
        )
    )
);;

CORR.KENDAL.TEST = LAMBDA(
    x_i; y_i; 
    LET(
        s_n; ANZAHL(x_i);
        x_j; MTRANS(x_i);
        y_j; MTRANS(y_i);
        triangle; MTRIANGLE(s_n; WAHR; WAHR);
        tr_sign; STAT.SIGN(x_i - x_j) * STAT.SIGN(y_i - y_j) * triangle;
        n_c; SUMME(1 * (tr_sign > 0));
        n_d; SUMME(1 * (tr_sign < 0));

        m_k; MIN(ANZAHL(EINDEUTIG(x_i)); ANZAHL(EINDEUTIG(y_i)));
        r_tau; (n_c - n_d) * 2 / (s_n ^ 2 * ((m_k - 1)/m_k));

        v_0; s_n * (s_n - 1) * (2 * s_n + 5);

        t_rank; RANG.MITTELW(x_i; x_i);
        u_rank; RANG.MITTELW(y_i; y_i);
        t_ties; EINDEUTIG(t_rank);
        u_ties; EINDEUTIG(u_rank);
        t_i; ZÄHLENWENN(t_ties; t_rank);
        u_i; ZÄHLENWENN(u_ties; u_rank);
        v_t; SUMME(t_i * (t_i - 1) * (2 * t_i + 5));
        v_u; SUMME(u_i * (u_i - 1) * (2 * u_i + 5));
        v_1; SUMME(t_i * (t_i - 1)) * SUMME(u_i * (u_i - 1)) / (2 * s_n * (s_n - 1));
        v_2; SUMME(t_i * (t_i - 1) * (t_i - 2)) * SUMME(u_i * (u_i - 1) * (u_i - 2)) / (9 * s_n * (s_n - 1) * (s_n - 2)); 

        v_all; 1/18 * v_0 - (v_t + v_u) / 18 + v_1 + v_2;

        z_b; (n_c - n_d) / WURZEL(v_all);

        p_v; NORM.VERT(z_b; 0; 1; WAHR);
        p_value; 2 * WENN(p_v > .5; 1 - p_v; p_v);

        VSTAPELN( 
            HSTAPELN(
                "r"; 
                "z"; 
                "p"
            );
            HSTAPELN(
                r_tau; 
                z_b; 
                p_value
            )
        )
    )
);;

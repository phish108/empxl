T.TEST.S = LAMBDA( 
    p_values; p_groups; [alternative]; [paired]; 
    LET(
        ab_names; EINDEUTIG(p_groups);
        paired; WENN(WURDEAUSGELASSEN(paired); 3; wenn(paired; 1; 3));
        alternative; WENN(WURDEAUSGELASSEN(alternative); "t"; PREP.ALTERNATIVE(alternative));
        altV; WENN(alternative = "t"; 2; 1);
        altO; WENN(alternative = "g"; WAHR; FALSCH);
        g_1; ZEILENWAHL(ab_names; 1);
        g_2; ZEILENWAHL(ab_names; 2);
        p_v; WENN(
            ANZAHL2(ab_names) = 2; 
            T.TEST(FILTER(p_values; p_groups = g_1); FILTER(p_values; p_groups = g_2); altV; paired);
            #WERT!
        );
        mw_1; MITTELWERT(FILTER(p_values; p_groups = g_1));
        mw_2; MITTELWERT(FILTER(p_values; p_groups = g_2));
        
        // altV also compensates for p-value doubling in two-tailed tests
        altV * WENN(ODER(UND(altO; mw_1 > mw_2); UND(alternative = "l"; mw_1 < mw_2)); 1 - p_v; p_v)
    )
);;

AB.TEST = T.TEST.S;;
